# Default values for monitoring.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository:  jkaninda/prometheus
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v2.52.0"
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9090

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
config:
  enabled: true
  data:
    prometheus.yml: |
      global:
        scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
        evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
        # scrape_timeout is set to the global default (10s).
      scrape_configs:
        # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
        - job_name: "simple-api"
          metrics_path: '/actuator/prometheus'
          # scheme defaults to 'http'.
          scrape_interval: 30s # poll very quickly for a more responsive demo
          static_configs:
            - targets: ["simple-api:8080"]
              labels:
                application: 'Simple API'
livenessProbe:
  enabled: false
  httpGet:
    path: /
    port: http
readinessProbe:
  enabled: false
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: 
 - name: config
   configMap:
    name: prometheus
 - name: data
   persistentVolumeClaim:
    claimName: prometheus

# Additional volumeMounts on the output Deployment definition.
volumeMounts: 
 - name: config
   mountPath: "/etc/prometheus"
   readOnly: true
 - name: data
   mountPath: "/prometheus"
   #subPath: data
   readOnly: false
  

persistence:
  enabled: true
  storageClass: "sno-storage"
  existingClaim: ""
  accessMode: ReadWriteOnce
  size: 25Gi

nodeSelector: {}

tolerations: []

affinity: {}