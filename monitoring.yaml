apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus
  namespace: simple-api
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
      evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
      # scrape_timeout is set to the global default (10s).
    scrape_configs:
      # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
      - job_name: "simple-api"
        metrics_path: '/actuator/prometheus'
        # scheme defaults to 'http'.
        scrape_interval: 30s # poll very quickly for a more responsive demo
        static_configs:
          - targets: [ "simple-api:8080" ]
            labels:
              application: 'Simple API'

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana
  namespace: simple-api
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus:9090
        isDefault: true

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: simple-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: jkaninda/prometheus:v2.52.0
          envFrom:
            - configMapRef:
                name: prometheus
          ports:
            - containerPort: 9090
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: simple-api
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: jkaninda/grafana:11.0.0
          envFrom:
            - configMapRef:
                name: grafana
          ports:
            - containerPort: 3000
          volumeMounts:
            - mountPath: /data
              name: data
      volumes:
        - name: data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: simple-api
spec:
  selector:
    app: grafana
  ports:
    - port: 3000
      targetPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: simple-api
spec:
  selector:
    app: prometheus
  ports:
    - port: 9090
      targetPort: 9090
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana
  labels:
    name: grafana
spec:
  rules:
    - host: grafana.localhost
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: grafana
                port:
                  number: 3000